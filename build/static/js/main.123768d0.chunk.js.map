{"version":3,"sources":["actions/playlistActions.jsx","reducers/playlist.jsx","reducers/index.jsx","store/Store.jsx","services/MoviesService.jsx","components/MoviesList.jsx","components/MovieDetails.jsx","components/styles/NavBarWrapper.jsx","components/MoviePlaylist.jsx","routes/AppRoutes.jsx","components/Header.jsx","components/NavBar.jsx","App.jsx","index.jsx"],"names":["actions","initialState","movies","playlist","reducers","combineReducers","state","action","type","playlistActions","id","Set","movie","concat","filter","_","i","createStore","MoviesService","path","API_KEY","axios","_withBaseUrl","MoviesList","useState","data","results","setMovies","requestMovies","a","getPopularMovies","moviesResult","useEffect","map","key","className","title","to","MovieDetail","props","dispatch","useDispatch","setMovie","match","params","requestMovie","getMovieById","movieResult","baseUrl","backdrop_path","console","log","style","backgroundImage","backgroundColor","backgroundBlendMode","backgroundPosition","backgroundSize","backgroundRepeat","tagline","overview","release_date","vote_average","src","poster_path","alt","onClick","payload","addMovie","NavBarWrapper","styled","div","MoviePlaylist","movieList","useSelector","index","String","AppRoutes","exact","component","Header","_title","NavBar","App","rootElement","document","getElementById","ReactDOM","render","store","Store"],"mappings":"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","file":"static/js/main.123768d0.chunk.js","sourcesContent":["export const actions = {\r\n\tlistMovies: 'ListMovies',\r\n\taddMovie: 'AddMovie',\r\n\tremoveMovie: 'RemoveMovie',\r\n\t\r\n};\r\n\r\nexport const listMovies = (id, movie) => ({\r\n\ttype: actions.listMovies,\r\n\tid,\r\n\tmovie,\r\n});\r\n\r\nexport const addMovie = (movie) => ({\r\n\ttype: actions.addMovie,\r\n\tpayload: movie,\r\n});\r\n\r\nexport const removeMovie = (id) => ({\r\n\ttype: actions.removeMovie,\r\n\tpayload: id,\r\n});\r\n","import { actions as playlistActions } from '../actions/playlistActions';\r\n\r\nconst initialState = {\r\n  movies: {},\r\n  playlist: []\r\n};\r\n\r\nexport const playlist = (state = initialState, action) => {\r\n  let movies, playlist;\r\n  switch ( action.type )\r\n  {\r\n    case playlistActions.listMovies:\r\n      movies = { ...state.movies };\r\n      movies[ action.id ] = action.movies;\r\n      return {\r\n        ...state,\r\n        movies,\r\n      }\r\n    case playlistActions.addMovie:\r\n      playlist = [...new Set([...state.playlist, action.movie])];\r\n      return {\r\n\t\t\t...state,\r\n\t\t\t// playlist,\r\n\t\t\tplaylist: state.playlist.concat(action),\r\n\t\t};\r\n    case playlistActions.removeMovie:\r\n      playlist = state.playlist.filter((_, i) => i !== action.id);\r\n      return {\r\n        ...state,\r\n        playlist,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { playlist } from './playlist';\r\n\r\nexport const reducers = combineReducers({\r\n\tmovies: playlist,\r\n});\r\n","import { createStore } from 'redux';\r\nimport { reducers } from '../reducers/index';\r\n\r\nexport default createStore(reducers);\r\n","import axios from 'axios';\n\nexport class MoviesService {\n\tstatic API_KEY = 'd416af5d4faee64e25ab001d87aab5c3';\n\n\tstatic _withBaseUrl(path) {\n\t\treturn `https://api.themoviedb.org/3/${path}?api_key=${MoviesService.API_KEY}`;\n\t}\n\n\tstatic getPopularMovies() {\n\t\treturn axios(MoviesService._withBaseUrl('movie/popular'));\n\t}\n\n\tstatic getMovieById(id) {\n\t\treturn axios(MoviesService._withBaseUrl(`movie/${id}`));\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { MoviesService } from '../services/MoviesService';\nimport { Link } from 'react-router-dom';\n\nconst MoviesList = () => {\n\tconst [movies, setMovies] = useState({ data: { results: [] } });\n\n\tconst requestMovies = async () => {\n\t\tconst moviesResult = await MoviesService.getPopularMovies();\n\t\tsetMovies(moviesResult);\n\t};\n\n\tuseEffect(() => {\n\t\trequestMovies();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<ul>\n\t\t\t\t{movies.data.results.map((movie) => (\n\t\t\t\t\t<li key={movie.id}>\n\t\t\t\t\t\t<span className=\"movieID\">{movie.id}</span> - {movie.title} -\n\t\t\t\t\t\t<Link to={`movie/` + movie.id} className=\"detailLink\">\n\t\t\t\t\t\t\tDetails\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n// movie.poster_path - Imagem do poster do filme\nexport default MoviesList;","import React, { useState, useEffect } from 'react';\nimport { MoviesService } from '../services/MoviesService';\nimport { Link, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addMovie } from '../actions/playlistActions';\n\nconst MovieDetail = (props) => {\n\tconst dispatch = useDispatch();\n\tconst [movie, setMovie] = useState({ data: [] });\n\tconst id = props?.match?.params?.id;\n\n\tconst requestMovie = async () => {\n\t\tconst movieResult = await MoviesService.getMovieById(\n\t\t\tprops.match.params.id\n\t\t);\n\t\tsetMovie(movieResult);\n\t};\n\tuseEffect(() => {\n\t\trequestMovie();\n\t}, []);\n\n\tconst baseUrl = `https://image.tmdb.org/t/p/original/${movie.data.backdrop_path}`;\n\n\t//console.log('Request: ' + requestMovie);\n\t//console.log('Disp: ' + dispatch);\n\tconsole.log('ID: ' + id);\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName=\"bg-image\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(${baseUrl})`,\n\t\t\t\t\tbackgroundColor: 'GrayText',\n\t\t\t\t\tbackgroundBlendMode: 'screen, difference, lighten',\n\t\t\t\t\tbackgroundPosition: 'center',\n\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"bg-text\">\n\t\t\t\t\t<h1>{movie.data.title}</h1>\n\t\t\t\t\t<h3>{movie.data.tagline}</h3>\n\t\t\t\t\t<p>{movie.data.overview}</p>\n\t\t\t\t\t<p>Release date: {movie.data.release_date}</p>\n\t\t\t\t\t<p>Average vote: {movie.data.vote_average}</p>\n\t\t\t\t\t<p>Movie poster:</p>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t'https://image.tmdb.org/t/p/w300_and_h450_bestv2/' +\n\t\t\t\t\t\t\tmovie.data.poster_path\n\t\t\t\t\t\t}\n\t\t\t\t\t\talt={movie.data.title}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{/* TODO\n\t\t\t\t\t * Implement backdrop as a page background, making a semi-transparent div with the text\n\t\t\t\t\t */}\n\t\t\t\t</div>\n\n\t\t\t\t<p>\n\t\t\t\t\t<Link to=\"/\" className=\"backLink\">\n\t\t\t\t\t\tGo back\n\t\t\t\t\t</Link>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => dispatch(addMovie(movie.data[id]))}\n\t\t\t\t\t\tclassName=\"addPlaylist\"\n\t\t\t\t\t>\n\t\t\t\t\t\t+ playlist\n\t\t\t\t\t</button>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</>\n\t);\n};\nexport default MovieDetail;","import styled from 'styled-components';\r\n\r\nconst NavBarWrapper = styled.div`\r\n\tcolor: white;\r\n\tbackground-color: hsl(197, 93%, 29%);\r\n\tborder: none;\r\n\tborder-radius: 4px;\r\n\tpadding: 10px 24px;\r\n\ttext-align: center;\r\n\tfont-size: 16px;\r\n\tmargin: 4px 2px;\r\n\topacity: 0.7;\r\n\ttransition: 0.3s;\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\tcursor: pointer;\r\n`;\r\nexport default NavBarWrapper;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeMovie } from '../actions/playlistActions';\nimport NavBarWrapper from './styles/NavBarWrapper';\nimport MoviesList from './MoviesList';\n\n\nconst MoviePlaylist = () => {\n\tconst dispatch = useDispatch();\n\tconst movieList = useSelector((state) => state.movies);\n\tconst { playlist } = movieList;\n\t\n\tconsole.log('playlist: ' + playlist);\n\tconsole.log( 'movieList: ' + movieList );\n\treturn (\n\t\t<>\n\t\t\t<h1>My Playlist</h1>\n\t\t\t<ul>\n\t\t\t\t{playlist.map((movie, index) => (\n\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t<NavBarWrapper>\n\n\t\t\t\t\t\t<Link to={`/movie/${movie?.id}`}>\n\t\t\t\t\t\t\t{ String(movie?.title)}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick={() => dispatch(removeMovie(index))}\n\t\t\t\t\t\t\tclassName=\"navBar\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tX\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</NavBarWrapper> *\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</>\n\t);\n\t\n};\nexport default MoviePlaylist;\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MoviesList from '../components/MoviesList';\r\nimport MovieDetail from '../components/MovieDetails';\r\nimport MoviePlaylist from '../components/MoviePlaylist';\r\n\r\nconst AppRoutes = () => (\r\n\t<Switch>\r\n\t\t<Route path=\"/\" exact component={MoviesList} />\r\n\t\t<Route path=\"/movie/:id\" component={MovieDetail} />\r\n\t\t<Route path=\"/playlists\" component={MoviePlaylist} />\r\n\t</Switch>\r\n);\r\nexport default AppRoutes;\r\n","import React from 'react';\r\n\r\nconst Header = (_title) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>The Movie Database API</h1>\r\n\t\t\t{/* <h1>${ title }</h1> */ }\r\n\t\t\t{/*Verificar sobre passar o titulo como parametro*/}\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NavBarWrapper from './styles/NavBarWrapper';\n\nconst NavBar = () => (\n\t\t<NavBarWrapper className=\"navBar\">\n\t\t\t<Link to=\"/\">.:Home:.</Link>\n\t\t\t<Link to=\"/playlists\">.:Playlist:.</Link>\n\t\t</NavBarWrapper>\n\t);\nexport default NavBar;","import React from \"react\";\nimport \"./styles.css\";\nimport AppRoutes from './routes/AppRoutes';\nimport Header from './components/Header';\nimport NavBar from './components/NavBar';\n\n\nexport default function App() {\n  return (\n\t\t<>\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t\t\t<Header />\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<AppRoutes />\n\t\t\t</div>\n\t\t</>\n  );\n}\n","/**\n * 1 - Criar uma action (actions/counterActions.js);\n * 2 - Criar um reducer (reducers/counter.js);\n * 3 - Criar o index do reducer (reducers/index.js);\n * 4 - Criar a store (linha 19) (index.js);\n * 5 - Criar o provider para a store (linha 26) (index.js);\n * *** Lista de filmes favoritos colocar no state do reducer;\n *\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Store from './store/Store';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n\t<Provider store={Store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\trootElement\n);\n"],"sourceRoot":""}